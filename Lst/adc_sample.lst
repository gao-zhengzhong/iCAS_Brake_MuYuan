C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE ADC_SAMPLE
OBJECT MODULE PLACED IN .\Obj\adc_sample.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE src\app\adc\adc_sample.c MODV2 LARGE BROWSE INCDIR(.\src;.\src\bsw;.\s
                    -rc\driver;.\src\interaction;.\src\app\adc;.\src\app\alogrithm;.\src\app\can;.\src\app\ccp;.\src\app\diagnostic;.\src\app
                    -\mode control;.\src\app\task;.\src\app\Fun;.\src\app\rtos;.\src\bsw\can;.\src\bsw\desc;.\src\bsw\nm;.\src\app\time measu
                    -re;.\src\app\rte) MODV2 DEBUG PRINT(.\Lst\adc_sample.lst) OBJECT(.\Obj\adc_sample.obj) 

 stmt lvl     source

    1         /***********************************************************************
    2         *   Copyright (C) JWD Automotive Co., Ltd.                                             * 
    3         *       All Rights Reserved.                                                                   *
    4         *   Department : iCAS SW                                                                               *
    5         *   AUTHOR         :                                                                                               *
    6         ************************************************************************
    7         * Object        : 
    8         * Module        : adc_sample.c
    9         * Instance      : 
   10         * Description   : ADC sample
   11         *-----------------------------------------------------------------------
   12         * Version: v0.1
   13         * Date   : Dec 7,2019 
   14         * Author : Gao zehngzhong
   15         ***********************************************************************/
   16         /*-History--------------------------------------------------------------
   17         * Version    Date           Name            Changes and comments
   18         ------------------------------------------------------------------------
   19         * 0.1        Dec 7,2019     Gao Zhengzhong  Initial version
   20         *=====================================================================*/
   21         
   22         #include <string.h>
   23         #include "XC23xxBREGS.h"
   24         
   25         #define ADC_APP_GLOBALS
   26         #include "adc_sample.h"
   27         
   28         #include "adc_if.h"
   29         #include "rte.h"
   30         
   31         
   32         
   33         /**** Definition of variables ****/
   34         T_ADC tAdcSample = {0u};
   35         static T_ADC_APP tAdcApp = {0u};
   36         
   37         
   38         /**** Declaration of functions ****/
   39         static void AdcApp_SampleVehiclePowerVoltage(void);
   40         static void AdcApp_SampleBrakeMotorVlinkVoltage(void);
   41         static void AdcApp_SampleBrakeMotorAPhaseVoltage(void);
   42         static void AdcApp_SampleBrakeMotorBPhaseVoltage(void);
   43         static void AdcApp_SampleBrakePedalLocationVoltage(void);
   44         static void AdcApp_SampleMainCylinderVoltage(void);
   45         static void AdcApp_SampleMainCylinderPressureVoltage(void);
   46         
   47         static void AdcApp_SampleBrakePedalLocation1(void);
   48         static void AdcApp_SampleBrakePedalLocation2(void);
   49         static void AdcApp_SampleMainCylinderLocation1(void);
   50         static void AdcApp_SampleMainCylinderLocation2(void);
   51         
   52         static void AdcApp_SampleBrakeMotorCurrent(void);
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 2   

   53         static void AdcApp_SampleMainCylinderPressure(void);
   54         static void AdcApp_SampleEnvironmentTemperature(void);
   55         
   56         
   57         /***********************************************************************
   58         *  Name        : AdcApp_Init
   59         *  Description : After power on, initiliaze ADC sample variable
   60         *  Parameter   : None
   61         *  Returns     : None
   62         ***********************************************************************/
   63         void AdcApp_Init(void)
   64         {
   65  1              memset(&tAdcSample, 0, sizeof(tAdcSample));
   66  1              return;
   67  1      }
   68         
   69         /***********************************************************************
   70         *  Name        : AdcApp_DeInit
   71         *  Description : During running, need initilize ADC sample variable
   72         *  Parameter   : None
   73         *  Returns     : None
   74         ***********************************************************************/
   75         void AdcApp_DeInit(void)
   76         {
   77  1              return;
   78  1      }
   79         
   80         /***********************************************************************
   81         *  Name        : ApplAdc_TaskEntry
   82         *  Description : ADC sample main function
   83         *  Parameter   : None
   84         *  Returns     : None
   85         ***********************************************************************/
   86         void ApplAdc_TaskEntry(void)
   87         {
   88  1              AdcApp_SampleVehiclePowerVoltage();
   89  1              AdcApp_SampleBrakeMotorVlinkVoltage();
   90  1              AdcApp_SampleBrakeMotorAPhaseVoltage();
   91  1              AdcApp_SampleBrakeMotorBPhaseVoltage();
   92  1              AdcApp_SampleBrakePedalLocationVoltage();
   93  1              AdcApp_SampleMainCylinderVoltage();     
   94  1              AdcApp_SampleMainCylinderPressureVoltage();
   95  1      
   96  1              AdcApp_SampleBrakePedalLocation1();
   97  1              AdcApp_SampleBrakePedalLocation2();
   98  1              AdcApp_SampleMainCylinderLocation1();
   99  1              AdcApp_SampleMainCylinderLocation2();
  100  1      
  101  1              AdcApp_SampleBrakeMotorCurrent();
  102  1              AdcApp_SampleMainCylinderPressure();
  103  1              AdcApp_SampleEnvironmentTemperature();  
  104  1              return;
  105  1      }
  106         
  107         /***********************************************************************
  108         *  Name        : AdcApp_SampleVehiclePowerVoltage
  109         *  Description : Vehicle power voltage ADC value switch to real voltage value
  110         *  Parameter   : None
  111         *  Returns     : None
  112         ***********************************************************************/
  113         static void AdcApp_SampleVehiclePowerVoltage(void)
  114         {
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 3   

  115  1              INT32U tempVehiclePowerVoltage;
  116  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  117  1              
  118  1              tAdcSample.powerVoltage_Adc = ptr_AdcIf->vehiclePowerVoltage_Adc;
  119  1              
  120  1              /* Vehicle power voltage ADC value switch to real voltage value */
  121  1              tempVehiclePowerVoltage = (INT32U)tAdcSample.powerVoltage_Adc * 20000u;
  122  1              tAdcApp.vehiclePowerVoltage = (INT16U)(tempVehiclePowerVoltage >> 10);
  123  1              return;
  124  1      }
  125         
  126         /***********************************************************************
  127         *  Name        : AdcApp_SampleBrakeMotorVlinkVoltage
  128         *  Description : Brake motor vlink voltage ADC value switch to real voltage value
  129         *  Parameter   : None
  130         *  Returns     : None
  131         ***********************************************************************/
  132         static void AdcApp_SampleBrakeMotorVlinkVoltage(void)
  133         {
  134  1              INT32U tempVlinkVoltage;
  135  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  136  1              
  137  1              tAdcSample.motorVLinkVoltage_Adc = ptr_AdcIf->brakeMotorVlinkSensorVoltage_Adc;
  138  1              
  139  1              /* TODO: Brake motor vlink voltage ADC value switch to real voltage value */
  140  1              tempVlinkVoltage = (INT32U)tAdcSample.motorVLinkVoltage_Adc * 20000u;
  141  1              tAdcApp.brakeMotorVlinkVoltage = (INT16U)(tempVlinkVoltage >> 10);
  142  1              return; 
  143  1      }
  144         
  145         /***********************************************************************
  146         *  Name        : AdcApp_SampleBrakeMotorAPhaseVoltage
  147         *  Description : Brake motor A phase voltage ADC value switch to real voltage value
  148         *  Parameter   : None
  149         *  Returns     : None
  150         ***********************************************************************/
  151         static void AdcApp_SampleBrakeMotorAPhaseVoltage(void)
  152         {
  153  1              INT32U tempMotorAPhaseVoltage;
  154  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  155  1      
  156  1              tAdcSample.motorPhaseVoltage_Adc[0] = ptr_AdcIf->brakeMotorAPhaseSensorVoltage_Adc;     
  157  1              
  158  1              /* Brake motor A phase voltage ADC value switch to real voltage value */        
  159  1              tempMotorAPhaseVoltage = (INT32U)tAdcSample.motorPhaseVoltage_Adc[0] * 20000u;
  160  1              tAdcApp.brakeMotorAPhaseVoltage = (INT16U)(tempMotorAPhaseVoltage >> 10);
  161  1              return;
  162  1      }
  163         
  164         /***********************************************************************
  165         *  Name        : AdcApp_SampleBrakeMotorBPhaseVoltage
  166         *  Description : Brake motor B phase voltage ADC value switch to real voltage value
  167         *  Parameter   : None
  168         *  Returns     : None
  169         ***********************************************************************/
  170         static void AdcApp_SampleBrakeMotorBPhaseVoltage(void)
  171         {
  172  1              INT32U tempMotorBPhaseVoltage;
  173  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  174  1              
  175  1              tAdcSample.motorPhaseVoltage_Adc[1] = ptr_AdcIf->brakeMotorBPhaseSensorVoltage_Adc;     
  176  1              
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 4   

  177  1              /* Brake motor B phase voltage ADC value switch to real voltage value */        
  178  1              tempMotorBPhaseVoltage = (INT32U)tAdcSample.motorPhaseVoltage_Adc[1] * 20000u;
  179  1              tAdcApp.brakeMotorBPhaseVoltage = (INT16U)(tempMotorBPhaseVoltage >> 10);
  180  1              return;
  181  1      }
  182         
  183         /***********************************************************************
  184         *  Name        : AdcApp_SampleMainCylinderVoltage
  185         *  Description : Brake main cylinder sensor power voltage ADC value switch to real voltage value
  186         *  Parameter   : None
  187         *  Returns     : None
  188         ***********************************************************************/
  189         static void AdcApp_SampleMainCylinderVoltage(void)
  190         {
  191  1              INT32U tempCylinderVoltage;
  192  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  193  1              
  194  1              tAdcSample.mainCylinderVoltage_Adc = ptr_AdcIf->brakeMainCylinderSensorVoltage_Adc;     
  195  1              
  196  1              /* Brake main cylinder sensor power voltage ADC value switch to real voltage value */   
  197  1              tempCylinderVoltage = (INT32U)tAdcSample.mainCylinderVoltage_Adc * 20000u;
  198  1              tAdcApp.mainCylinderVoltage = (INT16U)(tempCylinderVoltage >> 10);
  199  1              return; 
  200  1      }
  201         
  202         /***********************************************************************
  203         *  Name        : AdcApp_SampleBrakePedalLocationVoltage
  204         *  Description : Brake pedal location sensor power voltage ADC value switch to real voltage value
  205         *  Parameter   : None
  206         *  Returns     : None
  207         ***********************************************************************/
  208         static void AdcApp_SampleBrakePedalLocationVoltage(void)
  209         {
  210  1              INT32U tempPedalVoltage;
  211  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  212  1      
  213  1              tAdcSample.brakePedalVoltage_Adc = ptr_AdcIf->brakePedalLocationSensorVoltage_Adc;      
  214  1              
  215  1              /* Brake pedal location sensor power voltage ADC value switch to real voltage value */  
  216  1              tempPedalVoltage = (INT32U)tAdcSample.brakePedalVoltage_Adc * 20000u;
  217  1              tAdcApp.brakePedalLocationVoltage = (INT16U)(tempPedalVoltage >> 10);
  218  1              return;         
  219  1      }
  220         
  221         /***********************************************************************
  222         *  Name        : AdcApp_SampleMainCylinderPressureVoltage
  223         *  Description : Brake main cylinder pressure sensor power voltage ADC value switch to real voltage value
  224         *  Parameter   : None
  225         *  Returns     : None
  226         ***********************************************************************/
  227         static void AdcApp_SampleMainCylinderPressureVoltage(void)
  228         {
  229  1              INT32U tempPressureVoltage;
  230  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  231  1              
  232  1              tAdcSample.pressureSensorVoltage_Adc = ptr_AdcIf->brakeMainCylinderPressureSensorVoltage_Adc;   
  233  1              
  234  1              /* Brake main cylinder pressure sensor power voltage ADC value switch to real voltage value */  
  235  1              tempPressureVoltage = (INT32U)tAdcSample.pressureSensorVoltage_Adc * 20000u;
  236  1              tAdcApp.mainCylinderPressureVoltage = (INT16U)(tempPressureVoltage >> 10);
  237  1              return;         
  238  1      }
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 5   

  239         
  240         /***********************************************************************
  241         *  Name        : AdcApp_SampleBrakePedalLocation1
  242         *  Description : Brake pedal location sensor 1 signal ADC value switch to real voltage value
  243         *  Parameter   : None
  244         *  Returns     : None
  245         ***********************************************************************/
  246         static void AdcApp_SampleBrakePedalLocation1(void)
  247         {
  248  1              INT32U tempBrakePedalTrip1;
  249  1              static INT16U brakePedalTrip1_Adc;
  250  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  251  1      
  252  1              /* TODO: Brake pedal location sensor 1 signal ADC value switch to real voltage value */ 
  253  1              tAdcSample.brakePedalTrip_Adc[0] = ptr_AdcIf->brakePedalLocationSensor1_Adc;
  254  1      
  255  1              tAdcSample.brakePedalTrip_Adc[0] = ((brakePedalTrip1_Adc * ADC_FILTER_PARM) + 
  256  1                                                                                      ((INT32U)tAdcSample.brakePedalTrip_Adc[0] * (100u - ADC_FILTER_PARM))) / 100u;  
*** WARNING C192 IN LINE 256 OF src\app\adc\adc_sample.c: '=': value truncated
  257  1              brakePedalTrip1_Adc = tAdcSample.brakePedalTrip_Adc[0]; 
  258  1      
  259  1              /* Limitter processing, lower than the initial position and handle as the initial position, 
  260  1               * higher than the initial position and handle factual displacement */
  261  1              if (tAdcSample.brakePedalTrip_Adc[0] <= gRTE_pedalInitValue[0])
  262  1              {
  263  2                      tempBrakePedalTrip1 = gRTE_pedalInitValue[0];
  264  2              }
  265  1              else
  266  1              {
  267  2                      tempBrakePedalTrip1 = tAdcSample.brakePedalTrip_Adc[0];
  268  2              }
  269  1      
  270  1              tempBrakePedalTrip1 = (tempBrakePedalTrip1 - gRTE_pedalInitValue[0]) * BRAKE_PEDAL_MECHANICAL_PARAM;
  271  1              tAdcApp.brakePedalLocation1 = (INT16U)(tempBrakePedalTrip1 / SENSOR1_RANGE_PARAM);                              
  272  1              return; 
  273  1      }
  274         
  275         /***********************************************************************
  276         *  Name        : AdcApp_SampleBrakePedalLocation2
  277         *  Description : Brake pedal location sensor 2 signal ADC value switch to real voltage value
  278         *  Parameter   : None
  279         *  Returns     : None
  280         ***********************************************************************/
  281         static void AdcApp_SampleBrakePedalLocation2(void)
  282         {
  283  1              INT32U tempBrakePedalTrip2;
  284  1              static INT16U brakePedalTrip2_Adc;
  285  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  286  1      
  287  1              /* TODO: Brake pedal location sensor 2 signal ADC value switch to real voltage value */ 
  288  1              tAdcSample.brakePedalTrip_Adc[1] = ptr_AdcIf->brakePedalLocationSensor2_Adc;
  289  1      
  290  1              tAdcSample.brakePedalTrip_Adc[1] = ((brakePedalTrip2_Adc * ADC_FILTER_PARM) + 
  291  1                                                                                  ((INT32U)tAdcSample.brakePedalTrip_Adc[1] * (100u - ADC_FILTER_PARM))) / 100u;      
*** WARNING C192 IN LINE 291 OF src\app\adc\adc_sample.c: '=': value truncated
  292  1              brakePedalTrip2_Adc = tAdcSample.brakePedalTrip_Adc[1]; 
  293  1              
  294  1              /* Limitter processing, lower than the initial position and handle as the initial position, 
  295  1               * higher than the initial position and handle factual displacement */
  296  1              if (tAdcSample.brakePedalTrip_Adc[1] <= gRTE_pedalInitValue[1])
  297  1              {
  298  2                      tempBrakePedalTrip2 = gRTE_pedalInitValue[1];
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 6   

  299  2              }
  300  1              else
  301  1              {
  302  2                      tempBrakePedalTrip2 = tAdcSample.brakePedalTrip_Adc[1];
  303  2              }
  304  1      
  305  1              tempBrakePedalTrip2 = (tempBrakePedalTrip2 - gRTE_pedalInitValue[1]) * BRAKE_PEDAL_MECHANICAL_PARAM;
  306  1              tAdcApp.brakePedalLocation2 = (INT16U)(tempBrakePedalTrip2 / SENSOR2_RANGE_PARAM);                              
  307  1              return; 
  308  1      }
  309         
  310         /***********************************************************************
  311         *  Name        : AdcApp_SampleMainCylinderLocation1
  312         *  Description : Brake main cylinder location sensor 1 signal ADC value switch to real voltage value
  313         *  Parameter   : None
  314         *  Returns     : None
  315         ***********************************************************************/
  316         static void AdcApp_SampleMainCylinderLocation1(void)
  317         {
  318  1              INT32U tempMainCylinderTrip1;
  319  1              static INT16U mainCylinderTrip1_Adc;
  320  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  321  1      
  322  1              /* TODO: Brake main cylinder location sensor 1 signal ADC value switch to real voltage value */ 
  323  1              tAdcSample.mainCylinderTrip_Adc[0] = ptr_AdcIf->brakeMainCylinderLocationSensor1_Adc;
  324  1      
  325  1              tAdcSample.mainCylinderTrip_Adc[0] = ((mainCylinderTrip1_Adc * ADC_FILTER_PARM) + 
  326  1                                                                                        ((INT32U)tAdcSample.mainCylinderTrip_Adc[0] * (100u - ADC_FILTER_PARM))) / 100u;      
*** WARNING C192 IN LINE 326 OF src\app\adc\adc_sample.c: '=': value truncated
  327  1              mainCylinderTrip1_Adc = tAdcSample.mainCylinderTrip_Adc[0];     
  328  1      
  329  1              /* Limitter processing, lower than the initial position and handle as the initial position, 
  330  1               * higher than the initial position and handle factual displacement */
  331  1              if (tAdcSample.mainCylinderTrip_Adc[0] <= gRTE_cylinderInitValue[0])
  332  1              {
  333  2                      tempMainCylinderTrip1 = gRTE_cylinderInitValue[0];
  334  2              }
  335  1              else
  336  1              {
  337  2                      tempMainCylinderTrip1 = tAdcSample.mainCylinderTrip_Adc[0];
  338  2              }
  339  1              
  340  1              tempMainCylinderTrip1 = (tempMainCylinderTrip1 - gRTE_cylinderInitValue[0]) * MAIN_CYLINDER_MECHANICAL_PA
             -RAM;
  341  1              tAdcApp.mainCylinderLocation1 = (INT16U)(tempMainCylinderTrip1 / SENSOR1_RANGE_PARAM);
  342  1              return;
  343  1      }
  344         
  345         /***********************************************************************
  346         *  Name        : AdcApp_SampleMainCylinderLocation2
  347         *  Description : Brake main cylinder location sensor 2 signal ADC value switch to real voltage value
  348         *  Parameter   : None
  349         *  Returns     : None
  350         ***********************************************************************/
  351         static void AdcApp_SampleMainCylinderLocation2(void)
  352         {
  353  1              INT32U tempMainCylinderTrip2;
  354  1              static INT16U mainCylinderTrip2_Adc;
  355  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  356  1      
  357  1              /* TODO: Brake main cylinder location sensor 2 signal ADC value switch to real voltage value */ 
  358  1              tAdcSample.mainCylinderTrip_Adc[1] = ptr_AdcIf->brakeMainCylinderLocationSensor2_Adc;
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 7   

  359  1      
  360  1              tAdcSample.mainCylinderTrip_Adc[1] = ((mainCylinderTrip2_Adc * ADC_FILTER_PARM) + 
  361  1                                                                                        ((INT32U)tAdcSample.mainCylinderTrip_Adc[1] * (100u - ADC_FILTER_PARM))) / 100u;
*** WARNING C192 IN LINE 361 OF src\app\adc\adc_sample.c: '=': value truncated
  362  1              mainCylinderTrip2_Adc = tAdcSample.mainCylinderTrip_Adc[1];     
  363  1      
  364  1              /* Limitter processing, lower than the initial position and handle as the initial position, 
  365  1               * higher than the initial position and handle factual displacement */
  366  1              if (tAdcSample.mainCylinderTrip_Adc[1] <= gRTE_cylinderInitValue[1])
  367  1              {
  368  2                      tempMainCylinderTrip2 = gRTE_cylinderInitValue[1];
  369  2              }
  370  1              else
  371  1              {
  372  2                      tempMainCylinderTrip2 = tAdcSample.mainCylinderTrip_Adc[1];
  373  2              }
  374  1              
  375  1              tempMainCylinderTrip2 = (tempMainCylinderTrip2 - gRTE_cylinderInitValue[1]) * MAIN_CYLINDER_MECHANICAL_PA
             -RAM;
  376  1              tAdcApp.mainCylinderLocation2 = (INT16U)(tempMainCylinderTrip2 / SENSOR2_RANGE_PARAM);
  377  1              return; 
  378  1      }
  379         
  380         /***********************************************************************
  381         *  Name        : AdcApp_SampleBrakeMotorCurrent
  382         *  Description : Brake motor current sensor ADC value switch to real voltage value
  383         *  Parameter   : None
  384         *  Returns     : None
  385         ***********************************************************************/
  386         static void AdcApp_SampleBrakeMotorCurrent(void)
  387         {
  388  1              INT32S tempMotorCurrent;
  389  1              static INT16U motorCurrent_Adc;
  390  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  391  1      
  392  1              /* TODO: Brake motor current sensor ADC value switch to real voltage value */   
  393  1              tAdcSample.motorCurrent_Adc = ptr_AdcIf->brakeMotorCurrentSensor_Adc;
  394  1              
  395  1              tAdcSample.motorCurrent_Adc = ((motorCurrent_Adc * ADC_FILTER_PARM) + 
  396  1                                                                         ((INT32U)tAdcSample.motorCurrent_Adc * (100u - ADC_FILTER_PARM))) / 100u;
*** WARNING C192 IN LINE 396 OF src\app\adc\adc_sample.c: '=': value truncated
  397  1              motorCurrent_Adc = tAdcSample.motorCurrent_Adc;
  398  1      
  399  1              tempMotorCurrent = tAdcSample.motorCurrent_Adc;
  400  1              
  401  1      #if (0 == HARDWARE_VERSION)
                      tempMotorCurrent = (tempMotorCurrent - MOTOR_CURRENT_THRESHOLD) * 10000u;
                      tAdcApp.brakeMotorCurrent = (INT16S)(tempMotorCurrent / MOTOR_CURRENT_PARAM);
              #else
  405  1              tempMotorCurrent = (MOTOR_CURRENT_THRESHOLD - tempMotorCurrent) * 10000u;
  406  1              tAdcApp.brakeMotorCurrent = (INT16S)(tempMotorCurrent / MOTOR_CURRENT_PARAM);
  407  1      #endif
  408  1              
  409  1              return;
  410  1      }
  411         
  412         /***********************************************************************
  413         *  Name        : AdcApp_SampleEnvironmentTemperature
  414         *  Description : Environment temperature sensor ADC value switch to real voltage value
  415         *  Parameter   : None
  416         *  Returns     : None
  417         ***********************************************************************/
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 8   

  418         static void AdcApp_SampleEnvironmentTemperature(void)
  419         {
  420  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  421  1      
  422  1              /* TODO: Environment temperature sensor ADC value switch to real voltage value */       
  423  1              tAdcSample.temperatureValue_Adc = ptr_AdcIf->environmentTemperatureSensor_Adc;
  424  1              tAdcApp.environmentTemperature = Rte_calcTemperature(tAdcSample.temperatureValue_Adc);
  425  1              return;
  426  1      }
  427         
  428         /***********************************************************************
  429         *  Name        : AdcApp_SampleMainCylinderPressure
  430         *  Description : Brake main cylinder sensor ADC value switch to real voltage value
  431         *  Parameter   : None
  432         *  Returns     : None
  433         ***********************************************************************/
  434         static void AdcApp_SampleMainCylinderPressure(void)
  435         {
  436  1              INT32U tempMainCylinderPressure;
  437  1              static INT16U mainCylinderPressure_Adc;
  438  1              const T_ADC_IF *ptr_AdcIf = AdcIf_InterfaceData();
  439  1      
  440  1              /* TODO: Brake main cylinder sensor ADC value switch to real voltage value */   
  441  1              tAdcSample.mainCylinderPressure_Adc = ptr_AdcIf->brakeMainCylinderPressureSensor_Adc;
  442  1      
  443  1              tAdcSample.mainCylinderPressure_Adc = ((mainCylinderPressure_Adc * ADC_FILTER_PARM) + 
  444  1                                                                                         ((INT32U)tAdcSample.mainCylinderPressure_Adc * (100u - ADC_FILTER_PARM))) / 100u;    
*** WARNING C192 IN LINE 444 OF src\app\adc\adc_sample.c: '=': value truncated
  445  1              mainCylinderPressure_Adc = tAdcSample.mainCylinderPressure_Adc;
  446  1              
  447  1              tempMainCylinderPressure = tAdcSample.mainCylinderPressure_Adc;
  448  1              tAdcApp.mainCylinderPressure = (INT16U)(tempMainCylinderPressure * 100000u / CYLINDER_PRESSURE_PARAM);
  449  1              return;
  450  1      }
  451         
  452         /***********************************************************************
  453         *  Name        : Adc_SampleData
  454         *  Description : ADC sample module interface
  455         *  Parameter   : None
  456         *  Returns     : ADC sample data structure access address
  457         ***********************************************************************/
  458         const T_ADC* Adc_SampleData(void)
  459         {
  460  1              return (&tAdcSample);
  461  1      }       
  462         
  463         const T_ADC_APP* AdcApp_SampleData(void)
  464         {
  465  1              return (&tAdcApp);
  466  1      }       
  467         
  468         /* _END_OF_ADC_SAMPLE_ */


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        1460     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          12     --------
  FAR-DATA SIZE    =          64     --------
C166 COMPILER V7.57.0, ADC_SAMPLE                                                          12/25/2020 20:36:05 PAGE 9   

  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =          76     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
