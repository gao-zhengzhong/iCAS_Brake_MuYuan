C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE CCU61
OBJECT MODULE PLACED IN .\Obj\CCU61.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE src\driver\CCU61.c MODV2 LARGE BROWSE INCDIR(.\src;.\src\bsw;.\src\dri
                    -ver;.\src\interaction;.\src\app\adc;.\src\app\alogrithm;.\src\app\can;.\src\app\ccp;.\src\app\diagnostic;.\src\app\mode 
                    -control;.\src\app\task;.\src\app\Fun;.\src\app\rtos;.\src\bsw\can;.\src\bsw\desc;.\src\bsw\nm;.\src\app\time measure;.\s
                    -rc\app\rte) MODV2 DEBUG PRINT(.\Lst\CCU61.lst) OBJECT(.\Obj\CCU61.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Capture / Compare Unit 61 (CCU61)
    3         // @Filename      CCU61.c
    4         // @Project       P300.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2365B-40F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains functions that use the CCU61 module.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020/5/8 09:17:38
   16         //
   17         //****************************************************************************
   18         
   19         // USER CODE BEGIN (CCU61_General,1)
   20         
   21         // USER CODE END
   22         
   23         
   24         
   25         //****************************************************************************
   26         // @Project Includes
   27         //****************************************************************************
   28         
   29         #include "MAIN.h"
   30         
   31         // USER CODE BEGIN (CCU61_General,2)
   32         
   33         #include "pwm.h"
   34         
   35         // USER CODE END
   36         
   37         
   38         //****************************************************************************
   39         // @Macros
   40         //****************************************************************************
   41         
   42         // USER CODE BEGIN (CCU61_General,3)
   43         
   44         // USER CODE END
   45         
   46         
   47         //****************************************************************************
   48         // @Defines
   49         //****************************************************************************
   50         
   51         // USER CODE BEGIN (CCU61_General,4)
   52         
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 2   

   53         // USER CODE END
   54         
   55         
   56         //****************************************************************************
   57         // @Typedefs
   58         //****************************************************************************
   59         
   60         // USER CODE BEGIN (CCU61_General,5)
   61         
   62         // USER CODE END
   63         
   64         
   65         //****************************************************************************
   66         // @Imported Global Variables
   67         //****************************************************************************
   68         
   69         // USER CODE BEGIN (CCU61_General,6)
   70         
   71         // USER CODE END
   72         
   73         
   74         //****************************************************************************
   75         // @Global Variables
   76         //****************************************************************************
   77         
   78         // USER CODE BEGIN (CCU61_General,7)
   79         
   80         // USER CODE END
   81         
   82         
   83         //****************************************************************************
   84         // @External Prototypes
   85         //****************************************************************************
   86         
   87         // USER CODE BEGIN (CCU61_General,8)
   88         
   89         // USER CODE END
   90         
   91         
   92         //****************************************************************************
   93         // @Prototypes Of Local Functions
   94         //****************************************************************************
   95         
   96         // USER CODE BEGIN (CCU61_General,9)
   97         
   98         // USER CODE END
   99         
  100         
  101         //****************************************************************************
  102         // @Function      void CCU61_vInit(void) 
  103         //
  104         //----------------------------------------------------------------------------
  105         // @Description   This is the initialization function of the CCU61 function 
  106         //                library. It is assumed that the SFRs used by this library 
  107         //                are in reset state. 
  108         //
  109         //----------------------------------------------------------------------------
  110         // @Returnvalue   None
  111         //
  112         //----------------------------------------------------------------------------
  113         // @Parameters    None
  114         //
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 3   

  115         //----------------------------------------------------------------------------
  116         // @Date          2020/5/8
  117         //
  118         //****************************************************************************
  119         
  120         // USER CODE BEGIN (Init,1)
  121         
  122         // USER CODE END
  123         
  124         void CCU61_vInit(void)
  125         {
  126  1        volatile unsigned int uwTemp;
  127  1        // USER CODE BEGIN (Init,2)
  128  1      
  129  1        // USER CODE END
  130  1      
  131  1        ///  -----------------------------------------------------------------------
  132  1        ///  Configuration of KERNEL REGISTERS :
  133  1        ///  -----------------------------------------------------------------------
  134  1        ///  - CCU61 Module is enabled.
  135  1        ///  - The CCU61 module clock = 80.000 MHz. 
  136  1        ///  - T12 is enabled.
  137  1        ///  - T13 is enabled.
  138  1        ///  - MCM is enabled.
  139  1      
  140  1        CCU61_KSCFG    =  0x0003;      // Kernel State Configuration Register
  141  1      
  142  1        uwTemp         =  CCU61_KSCFG;  // dummy read to avoid pipeline effects
  143  1      
  144  1        ///  -----------------------------------------------------------------------
  145  1        ///  Configuration of CCU61 Timer 12:
  146  1        ///  -----------------------------------------------------------------------
  147  1        ///  - Timer 12 Input clock factor (T12CLK) is 0
  148  1        ///  - prescaler factor is 0
  149  1        ///  - Timer 12 run bit is reset
  150  1        ///  - Single shot mode is disabled
  151  1        ///  - Timer 12 works in center aligned mode
  152  1        ///  - Interrupt on period match is enabled
  153  1        ///  - Interrupt on one match is disabled
  154  1        ///  - No External run selection is selected.
  155  1        ///  - Timer mode is selected.
  156  1        ///  - 
  157  1      
  158  1        CCU61_T12PR    =  0x07CF;      // load CCU61 T12 period register
  159  1      
  160  1        ///  -----------------------------------------------------------------------
  161  1        ///  Configuration of T13HR Signal:
  162  1        ///  -----------------------------------------------------------------------
  163  1        ///  - Signal T13HRD is selected as Input
  164  1        CCU61_PISELH   =  0x0003;      // Load CCU61 Port Input Selection register
  165  1      
  166  1      
  167  1        ///  -----------------------------------------------------------------------
  168  1        ///  Configuration of CCU61 Timer 13:
  169  1        ///  -----------------------------------------------------------------------
  170  1        ///  - Timer 13 Input Clock factor (T13CLK) is 1
  171  1        ///  - prescaler factor is 0
  172  1        ///  - Timer 13 run bit is reset
  173  1        ///  - Trigger control is disabled
  174  1        ///  - No External run selection is selected.
  175  1        ///  - Timer mode is selected.
  176  1        ///  - 
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 4   

  177  1        ///  - Single shot mode is disabled
  178  1        ///  - Interrupt on period match is disabled
  179  1        ///  - Interrupt on compare match is disabled
  180  1      
  181  1        CCU61_T13PR    =  0x0063;      // load CCU61 T13 period register
  182  1      
  183  1        CCU61_TCTR0    =  0x0180;      // load CCU61 timer control register 0
  184  1        CCU61_TCTR2    =  0x0020;      // load CCU61 timer control register 2
  185  1      
  186  1        ///  -----------------------------------------------------------------------
  187  1        ///  Configuration of Multi Channel Mode:
  188  1        ///  -----------------------------------------------------------------------
  189  1        ///  - Multi channel mode is disabled
  190  1      
  191  1      
  192  1        ///  -----------------------------------------------------------------------
  193  1        ///  Configuration of CCU61 Channel 0:
  194  1        ///  -----------------------------------------------------------------------
  195  1        ///  - Compare mode 1 is selected
  196  1        ///  - T12 modulation for output CC60 is enabled
  197  1        ///  - T13 modulation for output CC60 is disabled
  198  1        ///  - The trap functionality of the pin CC60 is disabled
  199  1        ///  - The compare output CC60 drives passive level while CC60ST is '0'
  200  1        ///  - The passive level of the output CC60 is '1'
  201  1        ///  - T12 modulation for output COUT60 is enabled
  202  1        ///  - T13 modulation for output COUT60 is disabled
  203  1        ///  - The trap functionality of the pin COUT60 is disabled
  204  1        ///  - The compare output COUT60 drives passive level while CC60ST is '1'
  205  1        ///  - The passive level of the output COUT60 is '0'
  206  1        ///  - Dead time generation is enabled
  207  1      
  208  1        ///  - Generation interrupt on flag ICC60R is disabled
  209  1        ///  - Generation interrupt on flag ICC60F is disabled
  210  1      
  211  1        CCU61_CC60SR   =  0x03E8;      // Load CCU61 capture/compare shadow 
  212  1                                       // register for channel 0
  213  1      
  214  1        ///  -----------------------------------------------------------------------
  215  1        ///  Configuration of CCU61 Channel 1:
  216  1        ///  -----------------------------------------------------------------------
  217  1        ///  - Compare mode 1 is selected
  218  1        ///  - T12 modulation for output CC61 is enabled
  219  1        ///  - T13 modulation for output CC61 is disabled
  220  1        ///  - The trap functionality of the pin CC61 is disabled
  221  1        ///  - The compare output CC61 drives passive level while CC61ST is '0'
  222  1        ///  - The passive level of the output CC61 is '1'
  223  1        ///  - T12 modulation for output COUT61 is enabled
  224  1        ///  - T13 modulation for output COUT61 is disabled
  225  1        ///  - The trap functionality of the pin COUT61 is disabled
  226  1        ///  - The compare output COUT61 drives passive level while CC61ST is '1'
  227  1        ///  - The passive level of the output COUT61 is '0'
  228  1        ///  - Dead time generation is enabled
  229  1      
  230  1        ///  - Generation interrupt on flag ICC61R is disabled
  231  1        ///  - Generation interrupt on flag ICC61F is disabled
  232  1      
  233  1        CCU61_CC61SR   =  0x03E8;      // Load CCU61 capture/compare shadow 
  234  1                                       // register for channel 1
  235  1      
  236  1        ///  -----------------------------------------------------------------------
  237  1        ///  Configuration of CCU61 Channel 2:
  238  1        ///  -----------------------------------------------------------------------
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 5   

  239  1        ///  - Channel 2 is disabled
  240  1        ///  - T12 modulation for output CC62 is disabled
  241  1        ///  - T13 modulation for output CC62 is disabled
  242  1        ///  - The trap functionality of the pin CC62 is disabled
  243  1        ///  - The passive level of the output CC62 is '0'
  244  1        ///  - The trap functionality of the pin COUT62 is disabled
  245  1        ///  - The passive level of the output COUT62 is '0'
  246  1        ///  - The passive level of the output COUT62 is '0'
  247  1      
  248  1        ///  - Generation interrupt on flag ICC62R is disabled
  249  1        ///  - Generation interrupt on flag ICC62F is disabled
  250  1      
  251  1        CCU61_CC62SR   =  0x03E8;      // Load CCU61 capture/compare shadow 
  252  1                                       // register for channel 2
  253  1      
  254  1        ///  -----------------------------------------------------------------------
  255  1        ///  Configuration of CCU61 Channel 3:
  256  1        ///  -----------------------------------------------------------------------
  257  1        ///  - T13 output is not inverted
  258  1      
  259  1      
  260  1        CCU61_CC63SR   =  0x0000;      // load CCU61 capture/compare shadow 
  261  1                                       // register for channel 3
  262  1      
  263  1      
  264  1        CCU61_T12DTC   =  0x03A0;      // load CCU61 dead time control register for 
  265  1                                       // timer T12
  266  1      
  267  1        CCU61_T12MSEL  =  0x0011;      // load CCU61 T12 campture/compare mode 
  268  1                                       // select register
  269  1      
  270  1        CCU61_CMPSTAT  =  0x0A00;      // load CCU61 compare status register
  271  1      
  272  1        CCU61_PSLR     =  0x0005;      // load CCU61 passive state level register
  273  1      
  274  1        CCU61_MODCTR   =  0x000F;      // load CCU61 modulation control register
  275  1      
  276  1        ///  -----------------------------------------------------------------------
  277  1        ///  Configuration of CCU61 trap control:
  278  1        ///  -----------------------------------------------------------------------
  279  1        ///  - Trap can only be generated by SW by setting the bit TRPF
  280  1        ///  - The trap state is left when a zero-match of T12 (while counting up) 
  281  1        ///    is detected (synchronization to T12)
  282  1        ///  - Bit TRPF is automatically cleared by HW (according to TRPPEN, TRPM0 
  283  1        ///    and TRPM1)
  284  1        ///  - Trap interrupt is disabled
  285  1      
  286  1      
  287  1        ///  -----------------------------------------------------------------------
  288  1        ///  Configuration of CCU61 interrupt control:
  289  1        ///  -----------------------------------------------------------------------
  290  1        ///  - For channel 0 interrupts is node I0 selected
  291  1        ///  - For channel 1 interrupts is node I0 selected
  292  1        ///  - For channel 2 interrupts is node I0 selected
  293  1        ///  - For correct hall event interrupt is node I0 selected
  294  1        ///  - For error interrupts is node I0 selected
  295  1        ///  - For T12 interrupts is node I0 selected
  296  1        ///  - For T13 interrupts is node I3 selected
  297  1      
  298  1      
  299  1        CCU61_INP      =  0x3000;      // Load CCU61 capture/compare interrupt node 
  300  1                                       // pointer register
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 6   

  301  1      
  302  1        CCU61_IEN      =  0x0080;      // Load CCU61 capture/compare interrupt 
  303  1                                       // enable register
  304  1      
  305  1      
  306  1        ///  -----------------------------------------------------------------------
  307  1        ///  Configuration of the used CCU61 Channels Interrupts:
  308  1        ///  -----------------------------------------------------------------------
  309  1        ///  NodeI0 service request node configuration:
  310  1        ///  - NodeI0 interrupt priority level (ILVL) = 5
  311  1        ///  - NodeI0 interrupt group level (GLVL) = 0
  312  1        ///  - NodeI0 group priority extension (GPX) = 0
  313  1      
  314  1        CCU61_0IC      =  0x0054;     
  315  1      
  316  1      
  317  1        ///  -----------------------------------------------------------------------
  318  1        ///  Configuration of T12, T13 ---- CCU61_TCTR4 Register:
  319  1        ///  -----------------------------------------------------------------------
  320  1        ///  - Enable shadow transfer of T12 and T13
  321  1        ///  - Timer 12 run bit is reset
  322  1        ///  - Timer 13 run bit is reset
  323  1        CCU61_TCTR4    =  0x4040;      // load CCU61 timer control register 4
  324  1      
  325  1        ///  -----------------------------------------------------------------------
  326  1        ///  Configuration of the used CCU61 Channel Port Pins:
  327  1        ///  -----------------------------------------------------------------------
  328  1        ///  - P0.0 is used for CCU61 output (CC60)
  329  1        ///  - P0.1 is used for CCU61 output (CC61)
  330  1        ///  - P0.2 is used for  CCU61 output (CC62)
  331  1        ///  - P0.3 is used for CCU61 output (COUT60)
  332  1        ///  - P0.4 is used for CCU61 output (COUT61)
  333  1        ///  - P0.5 is used for  CCU61 output (COUT62)
  334  1      
  335  1        P0_IOCR00 = 0x00B0;    //set direction register
  336  1        P0_IOCR01 = 0x00B0;    //set direction register
  337  1        P0_IOCR02 = 0x00B0;    //set direction register
  338  1        P0_IOCR03 = 0x00B0;    //set direction register
  339  1        P0_IOCR04 = 0x00B0;    //set direction register
  340  1        P0_IOCR05 = 0x00B0;    //set direction register
  341  1      
  342  1        CCU61_PISELL   =  0xFF00;      // Load CCU61 Port Input Selection register
  343  1      
  344  1      
  345  1        // USER CODE BEGIN (NodeI3,3)
  346  1      
  347  1        // USER CODE END
  348  1      
  349  1      } //  End of function CCU61_vInit
  350         
  351         
  352         //****************************************************************************
  353         // @Function      void CCU61_viNodeI0(void) 
  354         //
  355         //----------------------------------------------------------------------------
  356         // @Description   This is the interrupt service routine for the CCU61 node 
  357         //                I0. If the content of the corresponding compare timer 
  358         //                (configurable) equals the content of the capture/compare 
  359         //                register or if a capture event occurs at the associated 
  360         //                port pin, the interrupt request flag is set and an 
  361         //                interrupt is triggered (only if enabled).
  362         //                Please note that you have to add application specific code 
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 7   

  363         //                to this function.
  364         //
  365         //----------------------------------------------------------------------------
  366         // @Returnvalue   None
  367         //
  368         //----------------------------------------------------------------------------
  369         // @Parameters    None
  370         //
  371         //----------------------------------------------------------------------------
  372         // @Date          2020/5/8
  373         //
  374         //****************************************************************************
  375         
  376         // USER CODE BEGIN (NodeI0,1)
  377         
  378         // USER CODE END
  379         
  380         void CCU61_viNodeI0(void) interrupt CCU61_NodeI0_INT
  381         {
  382  1        // USER CODE BEGIN (NodeI0,2)
  383  1              
  384  1              const T_PWM* ptr_Pwm = Pwm_ControlData();
  385  1              
  386  1        // USER CODE END
  387  1      
  388  1        if(CCU61_IS & 0x0080)  // if CCU61_IS_T12PM
  389  1        {
  390  2          // Timer T12 period match detection
  391  2      
  392  2          // USER CODE BEGIN (NodeI0,19)
  393  2      
  394  2                      CCU61_vLoadChannelShadowRegister_CCU61_CHANNEL_0(ptr_Pwm->channelDutyA);
  395  2                      CCU61_vLoadChannelShadowRegister_CCU61_CHANNEL_1(ptr_Pwm->channelDutyB);
  396  2      
  397  2                      CCU61_vEnableShadowTransfer_CCU61_TIMER_12();//Enable PWM Duty
  398  2                      
  399  2          // USER CODE END
  400  2      
  401  2          CCU61_ISR |= 0x0080;  // clear flag CCU61_IS_T12PM
  402  2        }
  403  1      
  404  1      
  405  1      } //  End of function CCU61_viNodeI0
  406         
  407         
  408         
  409         
  410         // USER CODE BEGIN (CCU61_General,10)
  411         
  412         // USER CODE END
  413         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         408     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
C166 COMPILER V7.57.0, CCU61                                                               01/20/2021 09:50:38 PAGE 8   

  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
