C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE ADAS_AEB
OBJECT MODULE PLACED IN .\Obj\adas_aeb.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE src\app\alogrithm\adas_aeb.c MODV2 LARGE BROWSE INCDIR(.\src;.\src\bsw
                    -;.\src\driver;.\src\interaction;.\src\app\adc;.\src\app\alogrithm;.\src\app\can;.\src\app\ccp;.\src\app\diagnostic;.\src
                    -\app\mode control;.\src\app\task;.\src\app\Fun;.\src\app\rtos;.\src\bsw\can;.\src\bsw\desc;.\src\bsw\nm;.\src\app\time m
                    -easure;.\src\app\rte) MODV2 DEBUG PRINT(.\Lst\adas_aeb.lst) OBJECT(.\Obj\adas_aeb.obj) 

 stmt lvl     source

    1         //****************************************************************************
    2         // @Module        Project Settings
    3         // @Filename      adas_aeb.c
    4         // @Project       P300.dav
    5         //----------------------------------------------------------------------------
    6         // @Controller    Infineon XC2365B-40F80
    7         //
    8         // @Compiler      Keil
    9         //
   10         // @Codegenerator 2.0
   11         //
   12         // @Description   This file contains ADAS AEB function.
   13         //
   14         //----------------------------------------------------------------------------
   15         // @Date          2020-04-16 15:47:42
   16         //
   17         //****************************************************************************
   18         
   19         
   20         /**** Project Includes ****/
   21         
   22         #include <stdio.h>
   23         #include <stdlib.h>
   24         #include <string.h>
   25         #include <math.h>
   26         
   27         #include "adas_aeb.h"
   28         #include "can_com.h"
   29         
   30         
   31         /**** Definition of macros ****/
   32         #define ADAS_AEB_GLOBALS
   33         
   34         
   35         /**** Definition of variables ****/
   36         ADAS_AEB_STAT T_ADAS_AEB_STATUS t_AebInfo = {0u};
   37         ADAS_AEB_STAT T_ADAS_AEB_OBJ_INFO t_AebObjInfo = {0};
   38         
   39         
   40         /**** Declaration of functions ****/
   41         ADAS_AEB_STAT void FCW_StateMashine(void);
   42         ADAS_AEB_STAT void AEB_StateMashine(void);
   43         ADAS_AEB_STAT void AEB_ModeControl(void);
   44         ADAS_AEB_STAT void AEB_RiskAssessment(void);
   45         ADAS_AEB_STAT void AEB_DangerObjectIdentification(void);
   46         ADAS_AEB_STAT void AEB_TimeToCollisionAssessment(void);
   47         ADAS_AEB_STAT void AEB_OptimalBrakeDecelerationAssessment(void);
   48         
   49         
   50         /***********************************************************************
   51         *  Name        : AEB_Init
   52         *  Description : None
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 2   

   53         *  Parameter   : None
   54         *  Returns     : None
   55         ***********************************************************************/
   56         void AEB_Init(void)
   57         {
   58  1              memset(&t_AebInfo, 0, sizeof(t_AebInfo));
   59  1              memset(&t_AebObjInfo, 0, sizeof(t_AebObjInfo)); 
   60  1      }
   61         
   62         
   63         /***********************************************************************
   64         *  Name        : AEB_DeInit
   65         *  Description : None
   66         *  Parameter   : None
   67         *  Returns     : None
   68         ***********************************************************************/
   69         void AEB_DeInit(void) 
   70         {
   71  1              memset(&t_AebInfo, 0, sizeof(t_AebInfo));
   72  1              memset(&t_AebObjInfo, 0, sizeof(t_AebObjInfo)); 
   73  1      }
   74         
   75         
   76         /***********************************************************************
   77         *  Name        : AEB_TaskEntry
   78         *  Description : None
   79         *  Parameter   : None
   80         *  Returns     : None
   81         ***********************************************************************/
   82         void AEB_TaskEntry(void) 
   83         {
   84  1              AEB_ModeControl();
   85  1              AEB_DangerObjectIdentification();
   86  1      
   87  1              AEB_RiskAssessment();
   88  1              AEB_TimeToCollisionAssessment();        
   89  1      
   90  1              AEB_StateMashine();
   91  1              FCW_StateMashine();
   92  1      } 
   93         
   94         
   95         FP32 Dis_b;
   96         FP32 Dis_pb;
   97         FP32 Dis_w;
   98         FP32 Dis_w_exit;
   99         
  100         FP32 Dis_b_exit;
  101         FP32 TTC_w = AEB_TTC_WARNING_VALUE;
  102         FP32 TTC_fb = AEB_TTC_FULL_BRAKE_VALUE;
  103         FP32 TTC_pb = AEB_TTC_PARTIAL_BRAKE_VALUE;
  104         FP32 TTC_w_exit = AEB_TTC_EXIT_WARN_VALUE;
  105         FP32 TTC_b_exit = AEB_TTC_EXIT_BRAKE_VALUE;
  106         FP32 ParF_AEB_R_Active_Vhost_entry = AEB_FCW_ENABLE_VELOCITY_LOWER;
  107         FP32 ParF_AEB_R_Active_Vrel_entry = 0.0f;
  108         FP32 ParF_AEB_R_Active_Vrel_exit_w = 0.0f;
  109         FP32 ParF_AEB_R_Active_Vrel_exit_b = 0.0f;
  110         /***********************************************************************
  111         *  Name        : AEB_StateMashine
  112         *  Description : None
  113         *  Parameter   : None
  114         *  Returns     : None
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 3   

  115         ***********************************************************************/
  116         ADAS_AEB_STAT void AEB_StateMashine(void) 
  117         {
  118  1              switch (t_AebInfo.AebStatus)
  119  1              {
  120  2                      case AEB_STATUS_OFF:
  121  2                              AEB_DeInit();
  122  2                              t_AebInfo.AebStatus = AEB_STATUS_STANDBY;
  123  2                              break;
  124  2      
  125  2                      case AEB_STATUS_STANDBY:
  126  2                              /* 1: AEB_STATUS_STANDBY -> AEB_STATUS_WARNING */
  127  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                        
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_pb)
                                      //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Brake_Pedal_state) && (~t_AebInfo.Standstill_state))
              #else
  133  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_pb) 
  134  2                              //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
  135  2                          && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  136  2                          && (~t_AebInfo.Brake_Pedal_state) && (~t_AebInfo.Standstill_state))
  137  2      #endif
  138  2                              {
  139  3                                      t_AebInfo.AebStatus = AEB_STATUS_WARNING;
  140  3                              }
  141  2      
  142  2                              /* 2: AEB_STATUS_STANDBY -> AEB_STATUS_PARTIAL_BRAKE */
  143  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_pb) && (t_AebInfo.ObjDistLong > Dis_b) 
                                      //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Brake_Pedal_state) && (~t_AebInfo.Standstill_state))
              #else
  149  2                              if ((t_AebInfo.TimeToCollision <= TTC_pb) && (t_AebInfo.TimeToCollision > TTC_fb)
  150  2                              //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
  151  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  152  2                              && (~t_AebInfo.Brake_Pedal_state) && (~t_AebInfo.Standstill_state))
  153  2      #endif
  154  2                              {
  155  3                                      t_AebInfo.AebStatus = AEB_STATUS_PARTIAL_BRAKE;
  156  3                              }
  157  2      
  158  2                              /* 3: AEB_STATUS_STANDBY -> AEB_STATUS_ASSIST_BRAKE */
  159  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_pb)
                                      //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (t_AebInfo.Brake_Pedal_state && (~t_AebInfo.Standstill_state)))
              #else
  165  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_pb) 
  166  2                              //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)
  167  2                          && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  168  2                              && (t_AebInfo.Brake_Pedal_state && (~t_AebInfo.Standstill_state)))
  169  2      #endif
  170  2                              {
  171  3                                      t_AebInfo.AebStatus = AEB_STATUS_ASSIST_BRAKE;
  172  3                              }
  173  2      
  174  2                              /* 4: AEB_STATUS_STANDBY -> AEB_SATTUS_FULL_BRAKE */
  175  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_b) && (~t_AebInfo.Standstill_state)
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 4   

                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry))
              #else
  180  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb) && (~t_AebInfo.Standstill_state)
  181  2                              //&& (t_AebInfo.Velocity_host > ParF_AEB_R_Active_Vhost_entry)                  
  182  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
  183  2      #endif
  184  2                              {
  185  3                                      t_AebInfo.AebStatus = AEB_SATTUS_FULL_BRAKE;
  186  3                              }
  187  2      
  188  2                              /* When vehicle stop, AEB must be resume OFF. */
  189  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  190  2                              {
  191  3                                      t_AebInfo.AebStatus = AEB_STATUS_OFF;
  192  3                              }
  193  2                              
  194  2                              break;
  195  2      
  196  2                      case AEB_STATUS_WARNING:
  197  2                              /* 1: AEB_STATUS_WARNING -> AEB_STATUS_STANDBY */
  198  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if (t_AebInfo.Standstill_state || ((t_AebInfo.ObjDistLong > Dis_w_exit)
                                      && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
              #else
  202  2                              if (t_AebInfo.Standstill_state || ((t_AebInfo.TimeToCollision > TTC_w_exit)
  203  2                              && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
  204  2      #endif
  205  2                              {
  206  3                                      t_AebInfo.AebStatus = AEB_STATUS_STANDBY;       
  207  3                              }
  208  2      
  209  2                              /* 2: AEB_STATUS_WARNING -> AEB_STATUS_PARTIAL_BRAKE */
  210  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_pb) && (t_AebInfo.ObjDistLong > Dis_b) 
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry) 
                                      && (~t_AebInfo.Brake_Pedal_state))
              #else
  215  2                              if ((t_AebInfo.TimeToCollision <= TTC_pb) && (t_AebInfo.TimeToCollision > TTC_fb) 
  216  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry) 
  217  2                              && (~t_AebInfo.Brake_Pedal_state))
  218  2      #endif
  219  2                              {
  220  3                                      t_AebInfo.AebStatus = AEB_STATUS_PARTIAL_BRAKE; 
  221  3                              }
  222  2      
  223  2                              /* 3: AEB_STATUS_WARNING -> AEB_SATTUS_FULL_BRAKE */
  224  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_b)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
              #else
  228  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb)
  229  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
  230  2      #endif
  231  2                              {
  232  3                                      t_AebInfo.AebStatus = AEB_SATTUS_FULL_BRAKE;    
  233  3                              }
  234  2      
  235  2                              /* 4: AEB_STATUS_WARNING -> AEB_STATUS_ASSIST_BRAKE */  
  236  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_b) 
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry) 
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 5   

                                      && t_AebInfo.Brake_Pedal_state)
              #else
  241  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_fb) 
  242  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry) 
  243  2                              && t_AebInfo.Brake_Pedal_state)
  244  2      #endif
  245  2                              {
  246  3                                      t_AebInfo.AebStatus = AEB_STATUS_ASSIST_BRAKE;  
  247  3                              }
  248  2      
  249  2                              /* When vehicle stop, AEB must be resume OFF. */
  250  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  251  2                              {
  252  3                                      t_AebInfo.AebStatus = AEB_STATUS_OFF;
  253  3                              }
  254  2                              
  255  2                              break;
  256  2      
  257  2                      case AEB_STATUS_PARTIAL_BRAKE:
  258  2                              /* 1: AEB_STATUS_PARTIAL_BRAKE -> AEB_STATUS_STANDBY */
  259  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if (t_AebInfo.Standstill_state || ((t_AebInfo.ObjDistLong > Dis_w_exit)
                                      && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
              #else
  263  2                              if (t_AebInfo.Standstill_state || ((t_AebInfo.TimeToCollision > TTC_w_exit)
  264  2                              && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
  265  2      #endif
  266  2                              {
  267  3                                      t_AebInfo.AebStatus = AEB_STATUS_STANDBY;
  268  3                              }
  269  2      
  270  2                              /* 2: AEB_STATUS_PARTIAL_BRAKE -> AEB_STATUS_ASSIST_BRAKE */
  271  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_pb) && (t_AebInfo.ObjDistLong > Dis_b)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Brake_Pedal_state))
              #else
  276  2                              if ((t_AebInfo.TimeToCollision <= TTC_pb) && (t_AebInfo.TimeToCollision > TTC_fb)
  277  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  278  2                              && (~t_AebInfo.Brake_Pedal_state))
  279  2      #endif
  280  2                              {
  281  3                                      t_AebInfo.AebStatus = AEB_STATUS_ASSIST_BRAKE;
  282  3                              }
  283  2      
  284  2                              /* 3: AEB_STATUS_PARTIAL_BRAKE -> AEB_SATTUS_FULL_BRAKE */
  285  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_b) 
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
              #else
  289  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb) 
  290  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
  291  2      #endif
  292  2                              {
  293  3                                      t_AebInfo.AebStatus = AEB_SATTUS_FULL_BRAKE;
  294  3                              }
  295  2      
  296  2                              /* When vehicle stop, AEB must be resume OFF. */
  297  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  298  2                              {
  299  3                                      t_AebInfo.AebStatus = AEB_STATUS_OFF;
  300  3                              }
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 6   

  301  2                              
  302  2                              break;
  303  2      
  304  2                      case AEB_STATUS_ASSIST_BRAKE:
  305  2                              /* 1: AEB_STATUS_ASSIST_BRAKE -> AEB_STATUS_STANDBY */
  306  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )        
                                      if (t_AebInfo.Standstill_state || ((t_AebInfo.ObjDistLong > Dis_w_exit)
                                      && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
              #else
  310  2                              if (t_AebInfo.Standstill_state || ((t_AebInfo.TimeToCollision > TTC_w_exit)
  311  2                              && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_w)))
  312  2      #endif
  313  2                              {
  314  3                                      t_AebInfo.AebStatus = AEB_STATUS_STANDBY;
  315  3                              }
  316  2      
  317  2                              /* 2: AEB_STATUS_ASSIST_BRAKE -> AEB_SATTUS_FULL_BRAKE */
  318  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_b) 
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
              #else
  322  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb) 
  323  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry))
  324  2      #endif
  325  2                              {
  326  3                                      t_AebInfo.AebStatus = AEB_SATTUS_FULL_BRAKE;
  327  3                              }
  328  2      
  329  2                              /* 3: AEB_STATUS_ASSIST_BRAKE -> AEB_STATUS_PARTIAL_BRAKE */
  330  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_pb) && (t_AebInfo.ObjDistLong > Dis_b)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Brake_Pedal_state))
              #else
  335  2                              if ((t_AebInfo.TimeToCollision <= TTC_pb) && (t_AebInfo.TimeToCollision > TTC_fb)
  336  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  337  2                              && (~t_AebInfo.Brake_Pedal_state))
  338  2      #endif
  339  2                              {
  340  3                                      t_AebInfo.AebStatus = AEB_STATUS_PARTIAL_BRAKE;
  341  3                              }
  342  2      
  343  2                              /* 4: AEB_STATUS_ASSIST_BRAKE -> AEB_STATUS_WARNING */
  344  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_pb)
                                      && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Brake_Pedal_state))
              #else
  349  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_pb)
  350  2                              && (t_AebInfo.ObjVrelLong < ParF_AEB_R_Active_Vrel_entry)
  351  2                              && (~t_AebInfo.Brake_Pedal_state))
  352  2      #endif
  353  2                              {
  354  3                                      t_AebInfo.AebStatus = AEB_STATUS_WARNING;
  355  3                              }
  356  2      
  357  2                              /* When vehicle stop, AEB must be resume OFF. */
  358  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  359  2                              {
  360  3                                      t_AebInfo.AebStatus = AEB_STATUS_OFF;
  361  3                              }
  362  2                              
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 7   

  363  2                              break;                  
  364  2      
  365  2                      case AEB_SATTUS_FULL_BRAKE:
  366  2                              /* AEB_SATTUS_FULL_BRAKE -> AEB_STATUS_STANDBY */
  367  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.Standstill_state && (t_AebInfo.ObjDistLong >= Dis_b_exit))
                                      || ((t_AebInfo.ObjDistLong > Dis_w_exit) 
                                      && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_b)))
              #else
  372  2                              if ((t_AebInfo.Standstill_state && (t_AebInfo.TimeToCollision >= TTC_b_exit))
  373  2                              || ((t_AebInfo.TimeToCollision > TTC_w_exit) 
  374  2                              && (t_AebInfo.ObjVrelLong > ParF_AEB_R_Active_Vrel_exit_b)))
  375  2      #endif
  376  2                              {
  377  3                                      t_AebInfo.AebStatus = AEB_STATUS_STANDBY;
  378  3                              }
  379  2      
  380  2                              /* When vehicle stop, AEB must be resume OFF. */
  381  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  382  2                              {
  383  3                                      t_AebInfo.AebStatus = AEB_STATUS_OFF;
  384  3                              }
  385  2                                      
  386  2                              break;
  387  2      
  388  2                      default:
  389  2                              break;
  390  2              }
  391  1      }
  392         
  393         
  394         FP32 ParF_FCW_R_Active_Vhost_entry = AEB_FCW_ENABLE_VELOCITY_LOWER;
  395         FP32 ParF_FCW_R_TTC_Warning_upper = AEB_TTC_WARNING_VALUE;
  396         FP32 ParF_FCW_R_Active_Vrel_entry = 0.0f;
  397         FP32 ParF_FCW_R_Active_Vrel_exit_w = 0.0f;
  398         /***********************************************************************
  399         *  Name        : FCW_StateMashine
  400         *  Description : None
  401         *  Parameter   : None
  402         *  Returns     : None
  403         ***********************************************************************/
  404         ADAS_AEB_STAT void FCW_StateMashine(void)
  405         {
  406  1              switch (t_AebInfo.FcwStatus)
  407  1              {
  408  2                      case FCW_STATUS_STANDBY:
  409  2                              /* 1: FCW_STATUS_STANDBY -> FCW_STATUS_WARNING_1 */
  410  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_b)
                                      //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Standstill_state)
                                      && (t_AebInfo.TimeToCollision <= ParF_FCW_R_TTC_Warning_upper))
              #else
  417  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_fb)
  418  2                              //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)
  419  2                              && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry)
  420  2                              && (~t_AebInfo.Standstill_state)
  421  2                              && (t_AebInfo.TimeToCollision <= ParF_FCW_R_TTC_Warning_upper))
  422  2      #endif
  423  2                              {
  424  3                                      t_AebInfo.FcwStatus = FCW_STATUS_WARNING_1;
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 8   

  425  3                              }
  426  2      
  427  2                              /* 2: FCW_STATUS_STANDBY -> FCW_STATUS_WARNING_2 */
  428  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_b)
                                      //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry)
                                      && (~t_AebInfo.Standstill_state)
                                      && (t_AebInfo.TimeToCollision <= ParF_FCW_R_TTC_Warning_upper))
              #else
  435  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb)
  436  2                              //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)
  437  2                              && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry)
  438  2                              && (~t_AebInfo.Standstill_state)
  439  2                              && (t_AebInfo.TimeToCollision <= ParF_FCW_R_TTC_Warning_upper))
  440  2      #endif
  441  2                              {
  442  3                                      t_AebInfo.FcwStatus = FCW_STATUS_WARNING_2;
  443  3                              }
  444  2      
  445  2                              /* When vehicle stop, FCW must be resume OFF. */
  446  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  447  2                              {
  448  3                                      t_AebInfo.FcwStatus = AEB_STATUS_OFF;
  449  3                              }
  450  2      
  451  2                              break;
  452  2      
  453  2                      case FCW_STATUS_WARNING_1:
  454  2                              /* 1: FCW_STATUS_WARNING_1 -> FCW_STATUS_STANDBY */
  455  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong > AEB_TARGET_SAFETY_DISTANCE) || t_AebInfo.Standstill_state 
                                      || ((t_AebInfo.ObjDistLong > Dis_w_exit) && (t_AebInfo.ObjVrelLong > ParF_FCW_R_Active_Vrel_exit_w)))
              #else
  459  2                              if ((t_AebInfo.TimeToCollision > AEB_TTC_DEFAULT_VALUE) || t_AebInfo.Standstill_state 
  460  2                              || ((t_AebInfo.TimeToCollision > TTC_w_exit) && (t_AebInfo.ObjVrelLong > ParF_FCW_R_Active_Vrel_exit_w)
             -))
  461  2      #endif
  462  2                              {
  463  3                                      t_AebInfo.FcwStatus = FCW_STATUS_STANDBY;
  464  3                              }
  465  2      
  466  2                              /* 2: FCW_STATUS_WARNING_1 -> FCW_STATUS_WARNING_2 */
  467  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )
                                      if ((t_AebInfo.ObjDistLong <= Dis_b) && (~t_AebInfo.Standstill_state) 
                                      //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)
                                      && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry))
              #else
  472  2                              if ((t_AebInfo.TimeToCollision <= TTC_fb) && (~t_AebInfo.Standstill_state) 
  473  2                              //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry)                                  
  474  2                              && (t_AebInfo.ObjVrelLong < ParF_FCW_R_Active_Vrel_entry))
  475  2      #endif
  476  2                              {
  477  3                                      t_AebInfo.FcwStatus = FCW_STATUS_WARNING_2;
  478  3                              }
  479  2      
  480  2                              /* When vehicle stop, FCW must be resume OFF. */
  481  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  482  2                              {
  483  3                                      t_AebInfo.FcwStatus = AEB_STATUS_OFF;
  484  3                              }
  485  2                              
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 9   

  486  2                              break;
  487  2      
  488  2                      case FCW_STATUS_WARNING_2:
  489  2                              /* 1: FCW_STATUS_WARNING_2 -> FCW_STATUS_STANDBY */
  490  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong > AEB_TARGET_SAFETY_DISTANCE) || t_AebInfo.Standstill_state 
                                      || ((t_AebInfo.ObjDistLong > Dis_w_exit) && (t_AebInfo.ObjVrelLong > ParF_FCW_R_Active_Vrel_exit_w)))
              #else
  494  2                              if ((t_AebInfo.TimeToCollision > AEB_TTC_DEFAULT_VALUE) || t_AebInfo.Standstill_state 
  495  2                              || ((t_AebInfo.TimeToCollision > TTC_w_exit) && (t_AebInfo.ObjVrelLong > ParF_FCW_R_Active_Vrel_exit_w)
             -))
  496  2      #endif
  497  2                              {
  498  3                                      t_AebInfo.FcwStatus = FCW_STATUS_STANDBY;       
  499  3                              }
  500  2      
  501  2                              /* 2: FCW_STATUS_WARNING_2 -> FCW_STATUS_WARNING_1 */
  502  2      #if ( 1 == ADAS_AEB_DISTANCE_ALOGRITHM )                                
                                      if ((t_AebInfo.ObjDistLong <= Dis_w) && (t_AebInfo.ObjDistLong > Dis_b_exit)
                                      //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry) 
                                      && (~t_AebInfo.Standstill_state))
              #else
  507  2                              if ((t_AebInfo.TimeToCollision <= TTC_w) && (t_AebInfo.TimeToCollision > TTC_b_exit)
  508  2                              //&& (t_AebInfo.Velocity_host > ParF_FCW_R_Active_Vhost_entry) 
  509  2                              && (~t_AebInfo.Standstill_state))
  510  2      #endif
  511  2                              {
  512  3                                      t_AebInfo.FcwStatus = FCW_STATUS_WARNING_1;
  513  3                              }
  514  2      
  515  2                              /* When vehicle stop, FCW must be resume OFF. */
  516  2                              if (fabs(t_AebInfo.Velocity_host) < 1e-6)
  517  2                              {
  518  3                                      t_AebInfo.FcwStatus = AEB_STATUS_OFF;
  519  3                              }
  520  2                              
  521  2                              break;
  522  2      
  523  2                      default:
  524  2                              break;
  525  2              }
  526  1      }
  527         
  528         
  529         /***********************************************************************
  530         *  Name        : AEB_ModeControl
  531         *  Description : None
  532         *  Parameter   : None
  533         *  Returns     : None
  534         ***********************************************************************/
  535         ADAS_AEB_STAT void AEB_ModeControl(void)
  536         {
  537  1              /* AEB/FCW enable condition:
  538  1               * 1) Velocity > 5km/h and < 80km/h
  539  1               * 2) Gear D position
  540  1               * 3) Steering wheel angle is small
  541  1               * 4) Turn light steering lamp invalid */
  542  1              if (((t_AebInfo.Velocity_host < AEB_FCW_ENABLE_VELOCITY_LOWER) || (t_AebInfo.Velocity_host > AEB_FCW_ENAB
             -LE_VELOCITY_UPPER))
  543  1              || (0) // TODO: gear signal not D position
  544  1              || (0) // TODO: excessive steering wheel angle
  545  1              || (0) // TODO: accelerator pedeal valid
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 10  

  546  1              || (0)) // TODO: turn light steering lamp valid
  547  1              {
  548  2                      t_AebInfo.Standstill_state = FALSE;
  549  2              }
  550  1              else
  551  1              {
  552  2                      t_AebInfo.Standstill_state = FALSE;
  553  2              }
  554  1      }
  555         
  556         
  557         FP32 Calc_LongDistance(INT16U Distance)
  558         {
  559  1              FP32 retValue;
  560  1              retValue = (FP32)(Distance * 0.2f - 500.0f); 
  561  1              return retValue;
  562  1      }
  563         
  564         
  565         FP32 Calc_LatDistance(INT16U Distance)
  566         {
  567  1              FP32 retValue;
  568  1              retValue = (FP32)(Distance * 0.2f - 204.6f); 
  569  1              return retValue;
  570  1      }
  571         
  572         
  573         FP32 Calc_LongVelocity(INT16U Velocity)
  574         {
  575  1              FP32 retValue;
  576  1              retValue = (FP32)(Velocity * 0.25f - 128.0f); 
  577  1              return retValue;        
  578  1      }
  579         
  580         
  581         FP32 Calc_LatVelocity(INT16U Velocity)
  582         {
  583  1              FP32 retValue;
  584  1              retValue = (FP32)(Velocity * 0.25f - 64.0f); 
  585  1              return retValue;        
  586  1      }
  587         
  588         
  589         FP32 Calc_LongAccelerate(INT16U Accelerate)
  590         {
  591  1              FP32 retValue;
  592  1              retValue = (FP32)(Accelerate * 0.01f - 10.0f); 
  593  1              return retValue;        
  594  1      }
  595         
  596         
  597         FP32 Calc_LatAccelerate(INT16U Accelerate)
  598         {
  599  1              FP32 retValue;
  600  1              retValue = (FP32)(Accelerate * 0.01f - 2.5f); 
  601  1              return retValue;        
  602  1      }
  603         
  604         FP32 Calc_HostVelocity(INT16U Velocity)
  605         {
  606  1              FP32 retValue;
  607  1              retValue = (FP32)(Velocity * 0.01f); 
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 11  

  608  1              return retValue;        
  609  1      }
  610         
  611         /***********************************************************************
  612         *  Name        : AEB_DangerObjectIdentification
  613         *  Description : None
  614         *  Parameter   : None
  615         *  Returns     : None
  616         ***********************************************************************/
  617         ADAS_AEB_STAT void AEB_DangerObjectIdentification(void) 
  618         {
  619  1              INT8U i, tempDangerObjIndex = 0;
  620  1              FP32 tempObjDistLong = 0;
  621  1              
  622  1              const T_CAN_COM *ptr = CanCom_ApplCanComDataAccess();
  623  1      
  624  1              /* Before identification, taget longtitude distance initialize safety distance. */
  625  1              tempObjDistLong = AEB_TARGET_SAFETY_DISTANCE;
  626  1              
  627  1              /* Screening the most danderous target information. */  
  628  1              for (i = 0u; i < RADAR_DETECT_OBJECT_NUM; i++)
  629  1              {
  630  2                      if ((tempObjDistLong > Calc_LongDistance(ptr->RadarData.ObjGeneral[i].Object_DistLong)) && (0.0f != Calc
             -_LongDistance(ptr->RadarData.ObjGeneral[i].Object_DistLong)))
  631  2                      {
  632  3                              if ((Calc_LatDistance(ptr->RadarData.ObjGeneral[i].Object_DistLat) < 1.04f) && (Calc_LatDistance(ptr->R
             -adarData.ObjGeneral[i].Object_DistLat) > -1.04f))
  633  3                              {
  634  4                                      tempDangerObjIndex = i;
  635  4                                      tempObjDistLong = Calc_LongDistance(ptr->RadarData.ObjGeneral[i].Object_DistLong);                              
  636  4                              }
  637  3                      }
  638  2              }
  639  1      
  640  1              /* Danger object general info */
  641  1              t_AebObjInfo.Object_ID = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_ID;
  642  1              t_AebObjInfo.Object_DistLong = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_DistLong;
  643  1              t_AebObjInfo.Object_DistLat = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_DistLat;
  644  1              t_AebObjInfo.Object_VrelLong = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_VrelLong;
  645  1              t_AebObjInfo.Object_DynProp = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_DynProp;
  646  1              t_AebObjInfo.Object_VreLat = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_VreLat;
  647  1              t_AebObjInfo.Object_RCS = ptr->RadarData.ObjGeneral[tempDangerObjIndex].Object_RCS;
  648  1      
  649  1              /* Object important info */
  650  1              t_AebObjInfo.Object_DistLong_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_DistLong_rms;
  651  1              t_AebObjInfo.Object_VrelLong_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_VrelLong_rms;
  652  1              t_AebObjInfo.Object_DistLat_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_DistLat_rms;
  653  1              t_AebObjInfo.Object_VrelLat_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_VrelLat_rms;
  654  1              t_AebObjInfo.Object_ArelLat_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_ArelLat_rms;
  655  1              t_AebObjInfo.Object_ArelLong_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_ArelLong_rms;
  656  1              t_AebObjInfo.Object_Orientation_rms = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_Orientation_rm
             -s;
  657  1              t_AebObjInfo.Object_MeasState = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_MeasState;
  658  1              t_AebObjInfo.Object_ProbOfExist = ptr->RadarData.ObjQuality[tempDangerObjIndex].Object_ProbOfExist;
  659  1      
  660  1              /* Object expand info */
  661  1              t_AebObjInfo.Object_ArelLong = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_ArelLong;  
  662  1              t_AebObjInfo.Object_Class = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_Class;        
  663  1              t_AebObjInfo.Object_ArelLat = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_ArelLat;
  664  1              t_AebObjInfo.Object_OrientationAngel = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_OrientationA
             -ngel;
  665  1              t_AebObjInfo.Object_Length = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_Length;
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 12  

  666  1              t_AebObjInfo.Object_Width = ptr->RadarData.ObjExtended[tempDangerObjIndex].Object_Width;
  667  1      
  668  1              /* Object collision detect warning info */
  669  1              t_AebObjInfo.Object_CollDetRegionBitfield = ptr->RadarData.ObjWarning[tempDangerObjIndex].Object_CollDetR
             -egionBitfield;
  670  1      
  671  1      #if 1
  672  1              t_AebInfo.ObjDistLong = Calc_LongDistance(t_AebObjInfo.Object_DistLong);  // uint:0.2m/bit
  673  1              t_AebInfo.ObjDistLat = Calc_LatDistance(t_AebObjInfo.Object_DistLat);     // uint:0.2m/bit
  674  1      
  675  1              t_AebInfo.ObjVrelLong = Calc_LongVelocity(t_AebObjInfo.Object_VrelLong);  // uint:0.25m/s/bit   
  676  1              t_AebInfo.ObjVrelLat = Calc_LatVelocity(t_AebObjInfo.Object_VreLat);      // uint:0.25m/s/bit
  677  1                        
  678  1              t_AebInfo.ObjArelLong = Calc_LongAccelerate(t_AebObjInfo.Object_ArelLong); // uint:0.001m/s2/bit
  679  1              t_AebInfo.ObjArelLat = Calc_LatAccelerate(t_AebObjInfo.Object_ArelLat);    // uint:0.001m/s2/bit        
  680  1      
  681  1              t_AebInfo.Velocity_host = Calc_HostVelocity(ptr->VehicleData.VehicleSpeedABS) / 3.6f; // uint:m/s
  682  1      
  683  1              t_AebInfo.DisplayObjVrelLong = 3.6f * t_AebInfo.ObjVrelLong;     // km/h
  684  1              t_AebInfo.DisplayObjVrelLat = 3.6f * t_AebInfo.ObjVrelLat;       // km/h
  685  1              t_AebInfo.DisplayHostVelocity = Calc_HostVelocity(ptr->VehicleData.VehicleSpeedABS); // km/h 
  686  1      #endif
  687  1      } 
  688         
  689         
  690         FP32 min_fun(FP32 a, FP32 b)
  691         {
  692  1              FP32 min;
  693  1              return min = a < b ? a : b;
  694  1      }
  695         
  696         
  697         FP32 max_fun(FP32 a, FP32 b)
  698         {
  699  1              FP32 max;
  700  1              return max = a > b ? a : b;
  701  1      }
  702         
  703         
  704         /***********************************************************************
  705         *  Name        : AEB_RiskAssessment
  706         *  Description : None
  707         *  Parameter   : None
  708         *  Returns     : None
  709         ***********************************************************************/
  710         ADAS_AEB_STAT void AEB_RiskAssessment(void) 
  711         {
  712  1              static FP32 Dis_part_1, Dis_part_2, Dis_part_3;
  713  1      
  714  1              /* Dis_part_1: Warning distance, driver distance within driver response time. */
  715  1              Dis_part_1 = max_fun((t_AebInfo.ObjVrelLong * AEB_WARNING_DRIVER_RESPONSE_DELAY_1), (t_AebInfo.Velocity_h
             -ost * AEB_WARNING_DRIVER_RESPONSE_DELAY_2));
  716  1      
  717  1              /* Dis_part_2: Braking distance, including driving distance and full braking distance within
  718  1               * the pressure build-up time of braking pressure. */
  719  1              Dis_part_2 = (t_AebInfo.ObjVrelLong * AEB_BRAKE_PRESSURE_BUILDUP_TIME / 2.0f) 
  720  1                                      + pow(t_AebInfo.ObjVrelLong, 2.0f) / (2.0f * AEB_FULL_BRAKE_MAX_DECELERATION);
  721  1      
  722  1              /* Dis_part_3: Prefabricated saftey distance, the safety distance reserved between the car and
  723  1               * the front car after braking can be checked by the car speed or relative speed. */
  724  1              Dis_part_3 = AEB_SAFETY_DISTANCE_STOPPING;
  725  1      
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 13  

  726  1              t_AebInfo.SafeDistLong = Dis_part_1 + Dis_part_2 + Dis_part_3;
  727  1      }
  728         
  729         
  730         /***********************************************************************
  731         *  Name        : AEB_TimeToCollisionAssessment
  732         *  Description : None
  733         *  Parameter   : None
  734         *  Returns     : None
  735         ***********************************************************************/
  736         ADAS_AEB_STAT void AEB_TimeToCollisionAssessment(void)
  737         {
  738  1              FP32 tempTTC;
  739  1      #if ( 0 == ADAS_AEB_TTC_SIMPLE_ALOGRITHM )
                      FP32 A_term, B_term, C_term, D_term;
                      FP32 TTC1, TTC2;
              
                      A_term = t_AebInfo.ObjArelLong / 2.0f;
                      B_term = t_AebInfo.ObjVrelLong;
                      C_term = t_AebInfo.ObjDistLong;
                      D_term = pow(B_term, 2) - 4.0f * B_term * C_term;
              
                      if ((fabs(A_term) < 1e-6) && (fabs(B_term) < 1e-6))
                      {
                              tempTTC = AEB_TTC_DEFAULT_VALUE;
                      }
                      else
                      {
                              if ((fabs(A_term) < 1e-6) && (fabs(B_term) > 1e-6))
                              {
                                      tempTTC = abs(C_term / B_term);
                              }
                              else
                              {
                                      if (D_term < 0.0f)
                                      {
                                              tempTTC = AEB_TTC_DEFAULT_VALUE;                
                                      }
                                      else
                                      {
                                              if (fabs(D_term) < 1e-6)
                                              {
                                                      tempTTC = B_term / (2.0f * A_term);
                                              }
                                              else
                                              {
                                                      TTC1 = (B_term + sqrt(D_term)) / (2.0f * A_term);
                                                      TTC2 = (B_term - sqrt(D_term)) / (2.0f * A_term);
                                                      tempTTC = min_fun(TTC1, TTC2);
                                              }               
                                      }
                              }
                      }
              #else
  780  1              if (t_AebInfo.ObjDistLong > 120.0f)
  781  1              {
  782  2                      t_AebInfo.TimeToCollision = AEB_TTC_DEFAULT_VALUE; 
  783  2              }
  784  1              else
  785  1              {
  786  2                      if (fabs(t_AebInfo.ObjVrelLong) < 1e-6)
  787  2                      {
C166 COMPILER V7.57.0, ADAS_AEB                                                            06/29/2020 10:22:09 PAGE 14  

  788  3                              t_AebInfo.TimeToCollision = AEB_TTC_DEFAULT_VALUE; 
  789  3                      }
  790  2                      else
  791  2                      {
  792  3                              tempTTC = t_AebInfo.ObjDistLong / t_AebInfo.ObjVrelLong;
  793  3                              t_AebInfo.TimeToCollision = tempTTC >= 0.0f ? tempTTC : (-tempTTC);
  794  3                      }               
  795  2              }
  796  1      #endif
  797  1      }
  798         
  799         
  800         FP32 Ka = 1.0f;
  801         /***********************************************************************
  802         *  Name        : AEB_OptimalBrakeDecelerationAssessment
  803         *  Description : None
  804         *  Parameter   : None
  805         *  Returns     : None
  806         ***********************************************************************/
  807         ADAS_AEB_STAT void AEB_OptimalBrakeDecelerationAssessment(void)
  808         {
  809  1              FP32 Deceleration_optim;
  810  1              
  811  1              Deceleration_optim = Ka * pow(t_AebInfo.ObjVrelLong, 2.0f) / (2.0f * (t_AebInfo.ObjDistLong - AEB_SAFETY_
             -DISTANCE_STOPPING));
  812  1      
  813  1              if (Deceleration_optim > t_AebInfo.Deceleration_optim)
  814  1              {
  815  2                      t_AebInfo.Deceleration_optim = Deceleration_optim;
  816  2              }
  817  1      }
  818         
  819         
  820         // End Of ADAS_AEB
  821         
*** WARNING C174 IN LINE 807 OF src\app\alogrithm\adas_aeb.c: 'AEB_OptimalBrakeDecelerationAssessment': unreferenced 'st
             -atic' function


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =        4578     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =          88     --------
  FAR-DATA SIZE    =          92     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =         216     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
