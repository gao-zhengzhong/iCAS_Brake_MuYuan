C166 COMPILER V7.57.0, CCP_IF                                                              01/20/2021 09:50:49 PAGE 1   


C166 COMPILER V7.57.0, COMPILATION OF MODULE CCP_IF
OBJECT MODULE PLACED IN .\Obj\ccp_if.obj
COMPILER INVOKED BY: C:\Keil_v5\C166\BIN\C166.EXE src\interaction\ccp_if.c MODV2 LARGE BROWSE INCDIR(.\src;.\src\bsw;.\s
                    -rc\driver;.\src\interaction;.\src\app\adc;.\src\app\alogrithm;.\src\app\can;.\src\app\ccp;.\src\app\diagnostic;.\src\app
                    -\mode control;.\src\app\task;.\src\app\Fun;.\src\app\rtos;.\src\bsw\can;.\src\bsw\desc;.\src\bsw\nm;.\src\app\time measu
                    -re;.\src\app\rte) MODV2 DEBUG PRINT(.\Lst\ccp_if.lst) OBJECT(.\Obj\ccp_if.obj) 

 stmt lvl     source

    1         /*
    2          * ccp_interface.c
    3          *
    4          *  Created on: 2015-5-21
    5          *      Author: zhangguangyao
    6          */
    7         
    8         // -----------------------------------------------------------------------------
    9         // INCLUDE FILES
   10         // -----------------------------------------------------------------------------
   11         #include "MAIN.h"
   12         #include "ccp_if.h"   // additional functions for CCP usage
   13         #include "ccp.h"
   14         
   15         #include "can_if.h"
   16         
   17         // -----------------------------------------------------------------------------
   18         //static ubyte RandomSeed[4] = {0};     //第一个字节是标志位
   19         BYTE receive_buffer[8]; // receive buffer
   20         
   21         // -----------------------------------------------------------------------------
   22         // SENDING an CRM-DTO when receiving an CRO
   23         // -----------------------------------------------------------------------------
   24         BYTE ccpSend(BYTEPTR msg) // #define BYTEPTR unsigned char*
   25         {
   26  1              // callup CAN-send调用CAN发送程序in“boot_can.c”
   27  1              
   28  1              CanSendMsg_v_g(49, msg);
   29  1              return 1;
   30  1      }
   31         // -----------------------------------------------------------------------------
   32         
   33         // -----------------------------------------------------------------------------
   34         // CONVERT pointer
   35         // -----------------------------------------------------------------------------
   36         MTABYTEPTR ccpGetPointer(BYTE addr_ext, DWORD addr) // get Pointer into
   37         {                                                                                                       // normal C
   38  1              return (MTABYTEPTR)addr;
   39  1      }
*** WARNING C47 IN LINE 36 OF src\interaction\ccp_if.c: 'addr_ext': unreferenced parameter
   40         // -----------------------------------------------------------------------------
   41         
   42         // -----------------------------------------------------------------------------
   43         // CALCULATE new measuerments
   44         // -----------------------------------------------------------------------------
   45         void ccpUserBackground(void)
   46         {
   47  1      }
   48         // -----------------------------------------------------------------------------
   49         
   50         // -----------------------------------------------------------------------------
   51         // Define
C166 COMPILER V7.57.0, CCP_IF                                                              01/20/2021 09:50:49 PAGE 2   

   52         // -----------------------------------------------------------------------------
   53         BYTE ccpDisableNormalOperation(MTABYTEPTR a, WORD s)
   54         {
   55  1              disable_interrupt(); // disables all interrupts, e.g. TIMER_0
   56  1              return 1;
   57  1      }
*** WARNING C47 IN LINE 53 OF src\interaction\ccp_if.c: 'a': unreferenced parameter
*** WARNING C47 IN LINE 53 OF src\interaction\ccp_if.c: 's': unreferenced parameter
   58         // -----------------------------------------------------------------------------
   59         
   60         // -----------------------------------------------------------------------------
   61         // Disable/Enable Interrupt Functions
   62         // -----------------------------------------------------------------------------
   63         BYTE disable_interrupt_count = 0; // init counter
   64         
   65         void disable_interrupt()
   66         {
   67  1              CCP_ENABLE_INTERRUPT;
   68  1              disable_interrupt_count++; // incr. counter
   69  1      }
   70         
   71         void enable_interrupt()
   72         {
   73  1              if (--disable_interrupt_count == 0)
   74  1              { // if interrupts only one time disabled
   75  2                      CCP_ENABLE_INTERRUPT;
   76  2                      //_asm();// enable them
   77  2              }
   78  1      }
   79         
   80         // -----------------------------------------------------------------------------
   81         void ccploop_v_g(INT8U* buffer)
   82         {
   83  1      
   84  1              //OS_CPU_SR   cpu_sr;
   85  1          INT8U length;
   86  1              ccpBackground();                      // calculate checksum。计算校验和
   87  1      
   88  1              ccpCommand(buffer);         // call ccpCommand。调用命令处理程序
   89  1              
   90  1              CCP_DISABLE_INTERRUPT;
   91  1      
   92  1              ccpSendCallBack();
   93  1      
   94  1              CCP_ENABLE_INTERRUPT;
   95  1      
   96  1              ccpDaq(1);                            // transmit new values
   97  1      }
*** WARNING C47 IN LINE 85 OF src\interaction\ccp_if.c: 'length': unreferenced local variable
   98         
   99         
  100         /*!******************************************************************************************************
  101         *       @fn     void   ccpGetSeed( CCP_BYTE resourceMask )
  102         *       @brief  CCP获取Seed函数
  103         *       @author Matt Zhang
  104         *       @param[in]      resourceMask
  105         *       @return Seed
  106         *       @note
  107         *               - 2012-7-28, Matt Zhang, created acct RD-SW-120001-24 SeedKey交互文档
  108         *********************************************************************************************************
  109         */
  110         CCP_DWORD ccpGetSeed(CCP_BYTE resourceMask)
C166 COMPILER V7.57.0, CCP_IF                                                              01/20/2021 09:50:49 PAGE 3   

  111         {
  112  1      
  113  1              return 0;
  114  1      }
*** WARNING C47 IN LINE 110 OF src\interaction\ccp_if.c: 'resourceMask': unreferenced parameter
  115         /*!******************************************************************************************************
  116         *       @fn     void    ccpUnlock( CCP_BYTE *key )
  117         *       @brief  CCP获取Key函数
  118         *       @author Matt Zhang
  119         *       @param[in]      key
  120         *       @return
  121         *       @note
  122         *               - 2012-7-28, Matt Zhang, created acct RD-SW-120001-24 SeedKey交互文档
  123         *********************************************************************************************************
  124         */
  125         CCP_BYTE ccpUnlock(CCP_BYTE *key)
  126         {
  127  1      
  128  1              return 0;
  129  1      }
*** WARNING C47 IN LINE 125 OF src\interaction\ccp_if.c: 'key': unreferenced parameter


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         120     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           1     --------
  FAR-DATA SIZE    =           8     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =           6     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
